[Program] {
    [Statement]^n
}

[Scope] {
    [Statement]^n
}

[Statement] {
    let identifier = [Expression];
    identifier = [Expression];
    return [Expression];
    [Scope]
}

[Expression] {
    [Term]
    [BinaryExpr]
}

[Term] {
    integer literal
    identifier
}


[BinaryExpr] {
    [Term] ([BinaryOperator] [Term])^n
}

[BinaryOperator] {
    -
}
